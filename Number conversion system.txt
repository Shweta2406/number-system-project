#include <stdio.h>
#include <math.h>
#include<string.h>
#include <conio.h>

long int Binary_to_Decimal(long int);
long int Binary_to_Octal(long int);

long int Decimal_to_Binary(long int);
long int Decimal_to_Octal(long int);

long int Octal_to_Binary(long int);
long int Octal_to_Decimal(long int);



int main()
{
    int operations,numbers=1,checking;
    long int b,o,d;

    int x,y,spacebar;

    printf("\t\tWELCOME TO NUMBER SYSTEM CONVERSION\n\n");

    while(numbers!=0)
    {
        printf("\t\t>>>>>> CHOOSE THE CONVERSION <<<<<<\n\n");

        printf("=> BINARY <=\n");
        printf("1: Binary to Decimal.\n2: Binary to Octal.\n");

        printf("\n=> DECIMAL <=\n");
        printf("3: Decimal to Binary.\n4: Decimal to Octal.\n");

        printf("\n=> OCTAL <=\n");
        printf("5: Octal to Binary.\n6: Octal to Decimal.\n");



        printf("\nENTER YOUR CHOICE: ");
        scanf("%d",&operations);

        switch(operations)
        {
            case 1:
                printf("\n***BINARY TO DECIMAL***\n");
                D:
                printf("\nEnter the Number in Binary form (0s & 1s): ");
                scanf("%ld",&b);

                checking=b;

                while(checking!=0)
                {
                    numbers=checking%10;
                    if(numbers>1)
                    {
                        printf("\n%d IS NOT BINARY NUMBER.\n",b);
                        printf("***TRY AGAIN****\n");
                        goto D;
                    }
                    else
                    checking=checking/10;
                }

                Binary_to_Decimal(b); break;

            case 2:
                printf("\n***BINARY TO OCTAL***\n");
                E:
                printf("\nEnter the Number in Binary form (0s & 1s): ");
                scanf("%ld",&b);

                checking=b;

                while(checking!=0)
                {
                    numbers=checking%10;
                    if(numbers>1)
                    {
                        printf("\n%d IS NOT BINARY NUMBER.\n",b);
                        printf("***TRY AGAIN****\n");
                        goto E;
                    }
                    else
                    checking=checking/10;
                }

                Binary_to_Octal(b); break;



            case 3:
                printf("\n***DECIMAL TO BINARY***\n");
                printf("\nEnter the Number in Decimal form (0 to 9): ");
                scanf("%ld",&d);
                Decimal_to_Binary(d); break;

            case 4:
                printf("\n***DECIMAL TO OCTAL***\n");
                printf("\nEnter the Number in Decimal form (0 to 9): ");
                scanf("%ld",&d);
                Decimal_to_Octal(d); break;



            case 5:
                printf("\n***OCTAL TO BINARY***\n");
                A:
                printf("\nEnter the Number in Octal form (0 to 7): ");
                scanf("%ld",&o);
                // CHECKING INPUT IS IN OCTAL FORM
                checking=o;

                while(checking!=0)
                {
                    numbers=checking%10;
                    if(numbers>7)
                    {
                        printf("\n%d IS NOT OCTAL NUMBER.\n",numbers);
                        goto A;
                    }
                    else
                    {
                    checking=checking/10;
                    x++;
                    }
                }
                Octal_to_Binary(o); break;

            case 6:
                printf("\n***OCTAL TO DECIMAL***\n");
                B:
                printf("\nEnter the Number in Octal form (0 to 7): ");
                scanf("%ld",&o);
                // CHECKING INPUT IS IN OCTAL FORM
                checking=o;

                while(checking!=0)
                {
                    numbers=checking%10;
                    if(numbers>7)
                    {
                        printf("\n%d IS NOT OCTAL NUMBER.\n",numbers);
                        goto B;
                    }
                    else
                    {
                    checking=checking/10;
                    x++;
                    }
                }
                Octal_to_Decimal(o); break;

            default:
                printf("\n***INVALID NUMBER***\n");
                break;
        }
        printf("\n\nDO YOU WANT TO CONTINUE = (1/0) :\n");
        scanf("%d",&numbers);

    }

    spacebar = 3+35;
        for( x=1;x<=3;x++)
        {
            for( y=1;y<=spacebar;y++)
            {
                printf(" ");
            }
            spacebar--;
            for( y=1;y<=2*x-1;y++)
            {
                printf("*");
            }
            printf("\n");
        }
        spacebar = 37;
        for( x=1;x<=3;x++)
        {
            for( y=1;y<=spacebar;y++)
            {
                printf(" ");
            }
            spacebar++;
            for( y=1;y<=2*(3-x)-1;y++)
            {
                printf("*");

            }

            printf("\n");

        }

}

long int Binary_to_Decimal(long int bin)
{
    int remainder,summation=0,x=0;
    while(bin!=0)
    {
        remainder=bin%10;
        bin=bin/10;
        summation=summation+remainder*pow(2,x);
        x++;
    }

    printf("\nEquivalent Decimal Number : %d",summation);
}

long int Binary_to_Octal(long int bin)
{
    int x=0,remainder,sum=0,remaining[100],length=0;

    while(bin!=0)
    {
        remainder=bin%10;
        bin=bin/10;
        sum=sum+remainder*pow(2,x);
        x++;
    }
    x=0;
    while(sum!=0)
    {
        remaining[x]=sum%8;
        sum=sum/8;
        x++;
        length++;
    }
    printf("\nEquivalent Octal Number : ");
    for(x=length-1;x>=0;x--)
    {
        printf("%d",remaining[x]);
    }
}



long int Decimal_to_Binary(long int dec)
{
    int remainder[50],x,length=0;
    do
    {
        remainder[x]=dec%2;
        dec=dec/2;
        x++;
        length++;
    }
    while(dec!=0);

    printf("\nEquivalent Binary Number : ");
    for(x=length-1;x>=0;x--)
    {
        printf("%d",remainder[x]);
    }
}

long int Decimal_to_Octal(long int dec)
{
    int remainder[50],x,length=0;
    do
    {
        remainder[x]=dec%8;
        dec=dec/8;
        x++;
        length++;
    }
    while(dec!=0);

    printf("\nEquivalent Octal Number : ");
    for(x=length-1;x>=0;x--)
    {
        printf("%d",remainder[x]);
    }
}



long int Octal_to_Binary(long int oct)
{
    int remainder[50],length=0,decimals=0,x=0,numbers,answers;

    while(oct!=0)
    {
        answers=oct % 10;
        decimals = decimals + answers * pow(8,x);
        x++;
        oct = oct/10;
    }

    x=0;
    do
    {
        remainder[x]=decimals%2;
        decimals=decimals/2;
        x++;
        length++;
    }
    while(decimals!=0);

    printf("\nEquivalent Binary Number : ");
    for(x=length-1;x>=0;x--)
    {
        printf("%d",remainder[x]);
    }
}

long int Octal_to_Decimal(long int oct)
{
    int decimals=0,x=0,numbers,answers;

    while(oct!=0)
    {
        answers=oct % 10;
        decimals = decimals + answers * pow(8,x);
        x++;
        oct = oct/10;
    }
    printf("\nEquivalent Decimal Number : %d",decimals);
}

